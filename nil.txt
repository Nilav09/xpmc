import tkinter as tk
from tkinter import messagebox

# Create the main application window
app = tk.Tk()
app.title("To-Do List")
app.geometry("300x400")

# List to store tasks
tasks = []

# Function to update the displayed task list
def update_task_list():
    listbox.delete(0, tk.END)
    for index, task in enumerate(tasks):
        status = "✓" if task["completed"] else "✗"
        listbox.insert(tk.END, f"{index + 1}. [{status}] {task['task']}")

# Function to add a new task
def add_task():
    task_text = entry.get()
    if task_text:
        tasks.append({"task": task_text, "completed": False})
        update_task_list()
        entry.delete(0, tk.END)
    else:
        messagebox.showwarning("Warning", "Please enter a task.")

# Function to delete a selected task
def delete_task():
    try:
        selected_index = listbox.curselection()[0]
        tasks.pop(selected_index)
        update_task_list()
    except IndexError:
        messagebox.showwarning("Warning", "Please select a task to delete.")

# Function to mark a selected task as complete
def complete_task():
    try:
        selected_index = listbox.curselection()[0]
        tasks[selected_index]["completed"] = True
        update_task_list()
    except IndexError:
        messagebox.showwarning("Warning", "Please select a task to mark as complete.")

# Create and position widgets
frame = tk.Frame(app)
frame.pack(pady=10)

listbox = tk.Listbox(frame, width=30, height=10, font=("Arial", 12))
listbox.pack(side=tk.LEFT, fill=tk.BOTH)

scrollbar = tk.Scrollbar(frame)
scrollbar.pack(side=tk.RIGHT, fill=tk.BOTH)

listbox.config(yscrollcommand=scrollbar.set)
scrollbar.config(command=listbox.yview)

entry = tk.Entry(app, width=25, font=("Arial", 12))
entry.pack(pady=10)

add_button = tk.Button(app, text="Add Task", command=add_task)
add_button.pack(pady=5)

delete_button = tk.Button(app, text="Delete Task", command=delete_task)
delete_button.pack(pady=5)

complete_button = tk.Button(app, text="Mark as Complete", command=complete_task)
complete_button.pack(pady=5)

# Run the application
app.mainloop()
